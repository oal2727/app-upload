{"version":3,"sources":["TypePage/PublicRouterPage.js","Api/Token.js","TypePage/PrivateRouterPage.js","Components/Button/ButtonComponent.js","Components/Forms/FormInput.jsx","Components/Button/ButtonGoogle.jsx","Components/CardSocial/CardSocial.jsx","Api/api.js","Api/Login.js","pages/Login.js","pages/Register.js","context/UserReducer.js","context/UserContext.js","Api/Images.js","Components/CardPhotos/CardPhotos.js","upload_image.png","pages/Dashboard.js","Components/Navbar/NavBody.js","Components/Navbar/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["PublicRouterPage","Component","component","rest","render","props","getToken","cookie","get","PrivateRoute","path","ButtonComponent","type","variant","children","onClick","Button","style","display","margin","FormInput","placeholder","register","required","label","name","Form","Group","marginTop","Label","Control","ref","ButtonGoogle","responseGoogle","clientId","process","buttonText","onSuccess","onFailure","cookiePolicy","CardSocial","Card","className","Body","api","axios","create","baseURL","Api","token","defaults","headers","common","social","data","post","Login","useForm","handleSubmit","errors","sucessfullPage","message","a","set","window","location","href","onSubmit","then","response","catch","err","toast","error","email","password","tokenId","reset","history","useHistory","LoginUser","success","push","firstName","lastName","UserReducer","state","action","authenticated","payload","userAuthneticated","id","_id","spinner","imagenes","arrayData","filter","item","UserContext","createContext","UserContextProvider","useReducer","open","value","dispatch","Provider","idimagen","delete","CardPhotos","title","image","created_at","React","useContext","src","alt","Image","deletePhoto","format","Dashboard","useState","imagen","setImagen","file","setFile","useEffect","Images","refContainer","useRef","UploadImage","current","click","onChange","e","target","files","filereader","FileReader","onload","result","readAsDataURL","size","formData","FormData","append","map","index","createdAt","imageUrl","NavBody","PageLogin","exact","PageRegister","PrivateRouterPage","PageDashboard","setName","getData","logOut","remove","Spinner","animation","fontSize","Navbar","collapseOnSelect","expand","bg","Brand","as","Link","to","Toggle","aria-controls","Collapse","Nav","NavDropdown","Item","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","configure","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f8c18b54.chunk.js","sourcesContent":["import React from \"react\"\r\nimport {Route} from \"react-router-dom\"\r\nconst PublicRouterPage = ({component:Component,...rest})=>{\r\n    return(\r\n        <Route {...rest} render={(props) => (\r\n            <Component {...props}  />\r\n        )} />\r\n    )\r\n}\r\nexport default PublicRouterPage;","import cookie from \"js-cookie\"\r\nexport const getToken = ()=>{\r\n    if(cookie.get('token')){\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nexport const setToken = (data) => {\r\n    cookie.set('token',data)\r\n}\r\nexport const deleteToken = ()=>{\r\n    cookie.remove('token')\r\n}","import React from \"react\"\r\nimport {Route,Redirect} from 'react-router-dom'\r\nimport {getToken} from '../Api/Token'\r\n\r\nconst PrivateRoute = ({component:Component,...rest})=>{\r\n    return(\r\n        <Route {...rest} render={(props) => (\r\n            getToken()\r\n                ? <Component {...props} />\r\n                  : <Redirect path=\"/\"/>\r\n              )} />\r\n    )\r\n}\r\nexport default PrivateRoute;","import React from \"react\"\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst ButtonComponent = ({type,variant,children,onClick})=>{\r\n    return(\r\n        <Button type={type} onClick={onClick} style={{display:\"flex\",margin:\"auto\"}} variant={variant}>{children}</Button>\r\n    )\r\n}\r\nexport default ButtonComponent;","import React from \"react\"\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nconst FormInput = ({type,placeholder,register,required,label,name}) =>{\r\n    return(\r\n        <Form.Group style={{marginTop:10}}>\r\n        <Form.Label>{label}</Form.Label>\r\n        <Form.Control type={type} \r\n        name={name}\r\n        ref={register({required})}\r\n        placeholder={placeholder} />\r\n  </Form.Group>\r\n    )\r\n}\r\nexport default FormInput;","import React from \"react\"\r\nimport GoogleLogin from 'react-google-login';\r\nconst ButtonGoogle = ({responseGoogle}) =>{\r\n    return(\r\n        <GoogleLogin\r\n        style={{display:\"flex\",margin:\"auto\"}}\r\n        clientId={process.env.REACT_APP_KEY}\r\n        buttonText=\"Login\"\r\n        onSuccess={responseGoogle}\r\n        onFailure={responseGoogle}\r\n        cookiePolicy={'single_host_origin'}\r\n      />\r\n    )\r\n}\r\nexport default ButtonGoogle;","import React from \"react\"\r\nimport Card from 'react-bootstrap/Card';\r\nconst CardSocial= ({children})=>{\r\n    return(\r\n      <div style={{marginTop:30}}>\r\n  <Card className=\"card_social\">\r\n       <Card.Body>\r\n        {children}\r\n      </Card.Body>\r\n    </Card>\r\n    </div>\r\n    )\r\n\r\n}\r\nexport default CardSocial;","import axios from 'axios'\r\nimport cookie from \"js-cookie\"\r\n\r\nconst api = axios.create({\r\n    baseURL:'http://localhost:4000/api'\r\n})\r\n\r\n\r\nconst Api = function(){\r\n\tlet token=cookie.get('token')\r\n    if(token){\r\n         api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n    }\r\n    return api\r\n}\r\n\r\nexport default Api","import Api from './api'\r\n\r\nexport default {\r\n    LoginSocial(social,data){\r\n        return Api().post(`/${social}`,data)\r\n    },\r\n    Register(data){\r\n        return Api().post('/register',data)\r\n    },\r\n    Login(data){\r\n        return Api().post('/login',data)\r\n    },\r\n    Me(){\r\n        return Api().get('/dashboard')\r\n    }\r\n}","import React from \"react\"\r\nimport ButtonComponent from \"../Components/Button/ButtonComponent\"\r\nimport FormInput from \"../Components/Forms/FormInput\"\r\nimport ButtonGoogle from \"../Components/Button/ButtonGoogle\"\r\nimport CardSocial from \"../Components/CardSocial/CardSocial\"\r\nimport { useForm } from \"react-hook-form\";\r\nimport Api from \"../Api/Login\"\r\nimport {  toast } from 'react-toastify';\r\nimport {setToken} from \"../Api/Token\"\r\n\r\nconst Login = ()=>{\r\n    const {register,handleSubmit,errors } = useForm();\r\n    const onSubmit  = (data)=>{\r\n        Api.Login(data).then(response=>{\r\n            sucessfullPage(response.data.token,\"Login Sucessfull\")\r\n        }).catch(err=>{\r\n            toast.error(err.response.data.error)\r\n        })\r\n    }\r\n    const responseGoogle = (response)=>{\r\n        Api.LoginSocial('google',{tokenId:response.tokenId}).then(response=>{\r\n            sucessfullPage(response.data.token)\r\n        }).catch(err => {\r\n            toast.error(err.response.data.error)\r\n        })\r\n    }\r\n \r\n    const sucessfullPage = async(token,message)=>{\r\n        setToken(token)\r\n        window.location.href=\"/Dashboard\"\r\n    }\r\n\r\n    return(\r\n        <CardSocial>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n            <FormInput \r\n              label={\"Email\"}  \r\n              register={register}\r\n              name={\"email\"}  \r\n              placeholder=\"Input Email\" \r\n               type=\"email\"\r\n               required />\r\n            <p className=\"text-danger\"> {errors.email && \"*email  is required\"}</p>\r\n             <FormInput \r\n             label={\"Password\"}  \r\n            register={register}\r\n            name={\"password\"}  \r\n            placeholder=\"Input Password\" \r\n             type=\"password\"\r\n             required />\r\n             <p className=\"text-danger\"> {errors.password && \"*Password  is required\"}</p>\r\n            <ButtonComponent type=\"submit\" variant=\"primary\">Log In</ButtonComponent>\r\n            <ButtonGoogle \r\n            responseGoogle={responseGoogle}/>\r\n            </form>\r\n        </CardSocial>\r\n    )\r\n}\r\nexport default Login;","import React,{useState} from \"react\"\r\nimport ButtonComponent from \"../Components/Button/ButtonComponent\"\r\nimport FormInput from \"../Components/Forms/FormInput\"\r\nimport CardSocial from \"../Components/CardSocial/CardSocial\"\r\nimport { useForm } from \"react-hook-form\";\r\nimport LoginUser from \"../Api/Login\"\r\nimport {  toast } from 'react-toastify';\r\nimport {useHistory} from \"react-router-dom\"\r\nconst Login = ()=>{\r\n    const {register,handleSubmit,errors,reset } = useForm();\r\n    const history = useHistory();\r\n    const onSubmit  = (data)=>{\r\n        LoginUser.Register(data).then(response=>{\r\n            toast.success(\"Register Sucessfull\")\r\n            history.push(\"/Login\")\r\n            reset()\r\n        }).catch(err=> {\r\n            toast.error(err.response.data.error)\r\n        })\r\n    }\r\n    \r\n    return(\r\n        <CardSocial>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n            <FormInput label={\"First Name\"} \r\n            name={\"firstName\"} \r\n            placeholder=\"Input First Name\" \r\n            register={register}\r\n            type=\"text\"\r\n            required />\r\n             <p className=\"text-danger\"> {errors.firstName && \"*firstName  is required\"}</p>\r\n            <FormInput \r\n            label={\"Last Name\"} \r\n            register={register}\r\n            name={\"lastName\"}  \r\n            placeholder=\"Input Last Name\" \r\n            type=\"text\" \r\n            required/>\r\n               <p className=\"text-danger\"> {errors.lastName && \"*lastName  is required\"}</p>\r\n             <FormInput \r\n             label={\"Email\"}  \r\n             register={register}\r\n             name={\"email\"}  \r\n             placeholder=\"Input Email\" \r\n             type=\"email\" \r\n             required/>\r\n                <p className=\"text-danger\"> {errors.email && \"*Email  is required\"}</p>\r\n             <FormInput \r\n             label={\"Password\"}\r\n             register={register}  \r\n             name={\"password\"}  \r\n             placeholder=\"Input Password\" \r\n             type=\"password\" \r\n             required/>\r\n              <p className=\"text-danger\"> {errors.password && \"*Password  is required\"}</p>\r\n            <ButtonComponent type=\"submit\" variant=\"success\">Register</ButtonComponent>\r\n            </form>\r\n        </CardSocial>\r\n    )\r\n}\r\nexport default Login;","export const UserReducer =(state,action)=>{\r\n    switch(action.type){\r\n        case \"TOOGLE_AUTHENTICATED\":\r\n            return{\r\n                ...state,\r\n                authenticated:action.payload\r\n            }\r\n        case \"USER_AUTHENTICATED\":\r\n            return{\r\n                ...state,\r\n                userAuthneticated:{\r\n                    firstName:action.payload.firstName,\r\n                    lastName:action.payload.lastName,\r\n                    email:action.payload.email,\r\n                    id:action.payload._id\r\n                }\r\n        }\r\n        case \"TOOGLE_SPINNER\":\r\n            return{\r\n                ...state,spinner:action.payload\r\n            }\r\n       case \"SET_IMAGES\":\r\n            return{\r\n                ...state,imagenes:action.payload\r\n            }\r\n        case \"DELETE_IMAGEN\":\r\n            const arrayData = state.imagenes.filter(item => {\r\n                return item._id !== action.payload\r\n            })\r\n            return{\r\n                ...state,\r\n                imagenes:arrayData\r\n            }\r\n        case \"ADD_IMAGEN\":\r\n            return{\r\n                ...state,\r\n                imagenes:[\r\n                    ...state.imagenes,\r\n                    action.payload\r\n                ]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import React,{useReducer,createContext} from \"react\"\r\nimport {UserReducer} from \"./UserReducer\"\r\nexport const UserContext = createContext();\r\n\r\nconst UserContextProvider = ({children})=>{\r\n    const initialState={\r\n        open:false,\r\n        authenticated:false,\r\n        spinner:false,\r\n        userAuthneticated:{firstName:\"\",lastName:\"\",email:\"\",id:\"\"},\r\n        imagenes:[],\r\n    }\r\n    const [state,dispatch] = useReducer(UserReducer,initialState);\r\n    const value = { state, dispatch };\r\n    return (\r\n      <UserContext.Provider value={value}>\r\n        {children}\r\n      </UserContext.Provider>\r\n      )\r\n}\r\nexport default UserContextProvider;","import Api from './api'\r\n\r\nexport default {\r\n    getImages(){\r\n        return Api().get(`/image`)\r\n    },\r\n    addImage(data){\r\n        return Api().post('/sendimage',data)\r\n    },\r\n    deleteImage(idimagen){\r\n        return Api().delete(`/image/${idimagen}`)\r\n    }\r\n}","import React from \"react\"\r\nimport \"./style.css\"\r\nimport Image from \"../../Api/Images\"\r\nimport {UserContext} from \"../../context/UserContext\"\r\nimport { format } from 'timeago.js';\r\n\r\n \r\nconst CardPhotos = ({title,image,id,created_at}) =>{\r\n\r\n  const {dispatch} = React.useContext(UserContext)\r\n  const deletePhoto =(id)=>{\r\n    Image.deleteImage(id).then(response => {\r\n        dispatch({type:\"DELETE_IMAGEN\",payload:response.data._id})\r\n    })\r\n  }\r\n\r\n    return(\r\n\r\n\r\n  <div className=\"card-image\">\r\n        <img className=\"image_card\" src={image} alt=\"\" />\r\n        <div className=\"box-trash\" onClick={()=>deletePhoto(id)}>\r\n          <i id=\"trash_icon\"  className=\"fas fa-trash\"></i>\r\n        </div>\r\n        <div className=\"card-image-body\">\r\n          <p className=\"time_upload\">{format(created_at)}</p>\r\n          <span className=\"title_card\">{title}</span>\r\n        </div>\r\n      </div>\r\n    )   \r\n}\r\nexport default CardPhotos","export default __webpack_public_path__ + \"static/media/upload_image.6b3755ce.png\";","import React,{useEffect} from \"react\"\r\nimport CardSocial from \"../Components/CardSocial/CardSocial\"\r\nimport {UserContext} from \"../context/UserContext\"\r\nimport ButtonComponent from \"../Components/Button/ButtonComponent\"\r\nimport FormInput from \"../Components/Forms/FormInput\"\r\nimport { useForm } from \"react-hook-form\";\r\nimport Images from \"../Api/Images\"\r\nimport CardPhotos from \"../Components/CardPhotos/CardPhotos\"\r\nimport UploadImage from \"../upload_image.png\"\r\nimport {  toast } from 'react-toastify';\r\nconst Dashboard = ()=>{\r\n    const {state,dispatch} = React.useContext(UserContext)\r\n    const [imagen,setImagen] = React.useState(null)\r\n    const [file,setFile] = React.useState(null);\r\n    const {register,handleSubmit,errors,reset } = useForm();\r\n    useEffect(()=>{\r\n        const getPhotos = ()=>{    \r\n            Images.getImages().then(response => {\r\n                dispatch({type:\"SET_IMAGES\",payload:response.data})\r\n            })\r\n        }\r\n        getPhotos();\r\n    },[])\r\n    const refContainer = React.useRef(); //reference for image\r\n    const fileUploadAction =()=>{\r\n        refContainer.current.click()\r\n    }\r\n    const fileUploadInputChange = (e)=>{\r\n        const file = e.target.files[0]\r\n        setFile(file)\r\n        const filereader = new FileReader()\r\n        filereader.onload = (e)=>{\r\n                setImagen(e.target.result)\r\n        }\r\n        filereader.readAsDataURL(file)\r\n    }\r\n    const onSubmit = (data,e) =>{\r\n        if(file === null){\r\n            return toast.error(\"No hay archivo integrado\")\r\n        }\r\n        if(file.type !== \"image/jpeg\"){\r\n            return  toast.error(\"Solo se permite imagenes con extension jpeg\")\r\n        }\r\n        if(file.size <= 20000){\r\n            return  toast.error(\"Solo se permite imagenes con extension jpeg\")\r\n        }\r\n        else{\r\n            const formData = new FormData();\r\n            reset();\r\n            formData.append('image',file)\r\n            formData.append('title',data.title)\r\n            Images.addImage(formData).then(response => {\r\n                dispatch({type:\"ADD_IMAGEN\",payload:response.data})\r\n                setImagen(null)\r\n                setFile(null)\r\n                e.target.reset(); \r\n            })\r\n          }\r\n    }\r\n    return(\r\n        <div>\r\n         <CardSocial>\r\n            <div className=\"box_social\"> \r\n            <div className=\"box-image\">\r\n            {\r\n                    imagen === null ? \r\n                    <img\r\n                    className=\"image\"\r\n                     src={UploadImage} alt=\"\"/>\r\n                    :\r\n                      <img \r\n                    className=\"image\"\r\n                        src={imagen} alt=\"\"/>\r\n            }\r\n            <i id=\"camera_image\"  onClick={fileUploadAction}   className=\"fas fa-camera\"></i>\r\n            <input type=\"file\" \r\n            ref={refContainer} \r\n            onChange={fileUploadInputChange} \r\n            name=\"imagen\"\r\n            style={{display:\"none\"}}\r\n             />\r\n           \r\n            </div>\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                <FormInput \r\n              label={\"Title Image\"}\r\n              register={register}  \r\n              name={\"title\"}\r\n              placeholder=\"Input Title for Image\" \r\n              type=\"text\"\r\n\r\n              required\r\n             />\r\n              <div>\r\n              <p className=\"text-danger\"> {errors.title && \"*Title  is required\"}</p>\r\n              </div>\r\n            <div>\r\n            <ButtonComponent type=\"submit\"  variant=\"success\">Save</ButtonComponent>\r\n        </div>\r\n                </form>\r\n            </div>\r\n        </CardSocial>\r\n        <div className=\"box-grid\">\r\n        {\r\n            state.imagenes.map((item,index)=>{\r\n                return(\r\n                    <CardPhotos \r\n                    key={index}\r\n                    title={item.title} \r\n                    id={item._id}\r\n                    created_at={item.createdAt}\r\n                    image={item.imageUrl}/>                )\r\n            })\r\n        }\r\n        </div>\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Dashboard;","import React from \"react\"\r\nimport {Switch} from \"react-router-dom\";\r\nimport PublicRouterPage from \"../../TypePage/PublicRouterPage\"\r\nimport PrivateRouterPage from \"../../TypePage/PrivateRouterPage\"\r\nimport PageLogin from \"../../pages/Login\"\r\nimport PageRegister from \"../../pages/Register\"\r\nimport PageDashboard from \"../../pages/Dashboard\"\r\nconst NavBody = ()=>{\r\n    return(\r\n        <Switch>\r\n            <PublicRouterPage component={PageLogin} path=\"/\"  exact/>\r\n            <PublicRouterPage component={PageLogin} path=\"/Login\"/>\r\n            <PublicRouterPage component={PageRegister} path=\"/Register\"/>\r\n            <PrivateRouterPage component={PageDashboard} path=\"/Dashboard\" />\r\n        </Switch>\r\n    )\r\n}\r\nexport default NavBody;","import React,{useEffect,useState} from \"react\"\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport {BrowserRouter as Router,Link} from \"react-router-dom\"\r\nimport NavDropdown  from 'react-bootstrap/NavDropdown'\r\nimport NavBody from \"./NavBody\"\r\nimport Login from \"../../Api/Login\"\r\nimport {deleteToken,getToken} from \"../../Api/Token\"\r\nimport {UserContext} from \"../../context/UserContext\"\r\nimport Spinner from 'react-bootstrap/Spinner'\r\n\r\nconst Dashboard = ()=>{\r\n  const [name,setName] = useState(\"\")\r\n  const {state,dispatch} = React.useContext(UserContext)\r\n  useEffect(()=>{\r\n    const getData = async ()=> {\r\n      if(getToken()){\r\n        const data = await Login.Me()\r\n        if(data){\r\n          setName(data.data.firstName + \" \"+data.data.lastName)\r\n          dispatch({type:\"TOOGLE_AUTHENTICATED\",payload:true})\r\n          dispatch({type:\"USER_AUTHENTICATED\",payload:data.data})\r\n        }else{\r\n          setName(\"\")\r\n        }\r\n      }else{\r\n      }\r\n    }    \r\n   \r\n    getData()\r\n},[])\r\n  const logOut = ()=>{\r\n    setName(\"User\");\r\n    deleteToken();\r\n    dispatch({type:\"TOOGLE_AUTHENTICATED\",payload:false})\r\n  }\r\n\r\n    return(\r\n          <div>\r\n            {\r\n              state.spinner ?\r\n             <div style={{marginTop:50}}>\r\n                <Spinner animation=\"border\" style={{fontSize:35}} variant=\"primary\" />\r\n               </div>\r\n              :\r\n              <Router>\r\n                <Navbar collapseOnSelect  expand=\"lg\"  bg=\"light\" variant=\"light\">\r\n                <Navbar.Brand as={Link} to=\"/\">App Authentication</Navbar.Brand>\r\n              <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          {\r\n            state.authenticated ? \r\n          <Nav className=\"ml-auto\">\r\n            <NavDropdown title={state.userAuthneticated.firstName+\" \"+state.userAuthneticated.lastName} id=\"collasible-nav-dropdown\">\r\n              <NavDropdown.Item  onClick={()=>logOut()} as={Link} to=\"/\" >Logout</NavDropdown.Item>\r\n            </NavDropdown>\r\n          </Nav>\r\n          :\r\n          <Nav>\r\n             <Nav.Link as={Link} to=\"/Dashboard\">Dashboard</Nav.Link>\r\n             <Nav.Link as={Link} to=\"/Login\">Login</Nav.Link>\r\n             <Nav.Link as={Link} to=\"/Register\">Register</Nav.Link>\r\n          </Nav>\r\n\r\n          }\r\n        </Navbar.Collapse>\r\n              </Navbar>\r\n              <NavBody name={name}/>\r\n            </Router>\r\n            }\r\n          </div>\r\n    )\r\n}\r\nexport default Dashboard;","import React from \"react\"\nimport Navbar from \"./Components/Navbar/Navbar\"\nimport UserContextProvider from \"./context/UserContext\"\nfunction App() {\n  return (\n    \n    <div className=\"App\">\n      <UserContextProvider>\n          <Navbar/>\n        </UserContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\ntoast.configure();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}